> docker build . -t web-server
 => [internal] load build definition from Dockerfile                                                                0.0s
 => => transferring dockerfile: 154B                                                                                0.0s
 => [internal] load .dockerignore                                                                                   0.0s
 => => transferring context: 2B                                                                                     0.0s
 => [internal] load metadata for docker.io/devopsdockeruh/simple-web-service:alpine                                 1.9s
 => CACHED [1/1] FROM docker.io/devopsdockeruh/simple-web-service:alpine@sha256:dd4d367476f86b7d7579d3379fe446ae5d  0.0s
 => => resolve docker.io/devopsdockeruh/simple-web-service:alpine@sha256:dd4d367476f86b7d7579d3379fe446ae5dfce2548  0.0s
 => exporting to image                                                                                              0.0s
 => => exporting layers                                                                                             0.0s
 => => writing image sha256:978fbf315695ef5a3ec2e77ee411c4dcd9aa9b867fbc7ea3d26962545fda0585                        0.0s
 => => naming to docker.io/library/web-server                                                                       0.0s

> docker images
REPOSITORY                TAG       IMAGE ID       CREATED          SIZE
hello-docker              v2        bb32471ecd13   12 minutes ago   5.61MB
hello-docker-additional   latest    e217c2c12829   15 minutes ago   5.61MB
hello-docker              latest    d6df9d82d56d   33 minutes ago   5.61MB
web-server                latest    978fbf315695   3 weeks ago      15.7MB

> docker run web-server
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:   export GIN_MODE=release
 - using code:  gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /*path                    --> server.Start.func1 (3 handlers)
[GIN-debug] Listening and serving HTTP on :8080